// Main
function Block(map, dataUrl){
  // dataUrl = "/tmp/block/";
  var block = {};

  // global config
  block.config = {
    map : {
      initiRoom : 11,
      initiLng : 121.46965,
      initiLat : 31.22866,
      maxZoom : 40
    },

    od_line : {
      line_color_arr : [1,3,5,7,9,11,13,15],
      line_weight_zoom : 0.3,
      line_fillOpacity : 0.2,
      arrowHead_size : 0.2,
      arrowHead_polygon : false,
      arrowHead_interval : 1000
    },

    od_block : {
      fillOpacity : 0.4,
      weight : 1,
      fill : true,
      strokeColor : "grey",
      // redArr : ["#FF7F50","#FF7F56","#FF6A6A","#FF6347","#FF4040","#FF3030","#FF0000"],
      // blueArr : ["#1E90FF","#1C86EE","#1874CD","#0000FF","#0000CD","#00008B"],

      redArr : ["#3cb0e8", "#48b4e8", "#5abbea", "#6ec2ea", "#89cff1", "#a4d9f3", "#b6e1f7", "#c4e3f3"],
      blueArr : ["#d45050", "#d25e5e", "#d26f6f", "#d48181", "#d08d8d", "#d09999", "#d0a5a5", "#ceb0b0"],
      maxCount : 40
    },

    heatmap : {
      count_arr : [500,1000,2000,3000,5000,10000,20000,50000],
      polygon_fillOpacity : 0.4
    },

    tools : {
      ditial_fix : 5
    }
  };

  // init map
  block.map = map;
  block.dataUrl = dataUrl;
  block.odData = {};
  for (var j = 0; j < 24; j++) {
    if (j < 10) {
      j = "0" + j;
    }
    block.odData[j + "0"] = null;
    block.odData[j + "5"] = null;
  }

  block.blockData = null;

  // clear map
  block.clearMap = function(){
    var config = block.config;
    block.map.eachLayer((layer) => {
      layer.remove();
    })
    L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:config.map.maxZoom,minZoom:5}).addTo(block.map);
  }

  //display heatmap
  block.maxheatmap = function(time){
    block.clearMap();
    var config = block.config;
    $.ajax({
                       type: "get",
                       url: block.dataUrl + "heat/" + time + ".json",
                      //  data: "name=" + $("#Text1").val(),
                       success: function (result) {
                         var arr = config.heatmap.count_arr;
                         for (var i = 0; i < result.length; i++) {
                           for (var j = 0; j < result[i].geometry.rings.length; j++) {
                             var latlngs = block.transform(result[i].geometry.rings[j]);
                             var color = block.getColor(result[i].attributes.c, arr);
                             var polygon = L.polygon(latlngs, {
                               color: "grey",
                               fillOpacity : config.heatmap.polygon_fillOpacity,
                               weight : config.od_block.weight,
                               fillColor : color
                             }).addTo(block.map);
                             polygon.bindPopup("color:"+color+", count:"+result[i].attributes.c);

                           }
                         }
                       }
                   });
  }

  //display heatmap
  block.heatmap = function(time){
    block.clearMap();
    var config = block.config;
    if (block.blockData === null) {
      $.ajax({
        type: "get",
        url: block.dataUrl + "enCounty.json",
        success: function(result) {
          block.blockData = result.features;

          $.ajax({
                             type: "get",
                             url: block.dataUrl + "heat/" + time + ".json",
                            //  data: "name=" + $("#Text1").val(),
                             success: function (result) {
                               var arr = config.heatmap.count_arr;
                               for (var i = 0; i < result.length; i++) {
                                 var color = block.getColor(result[i].c, arr);
                                 var id = result[i].i;
                                 var geometry = null;
                                 var name = "无";
                                 for (var m = 0; m < block.blockData.length; m++) {
                                   if (block.blockData[m].attributes.objectid === parseInt(id)) {
                                     geometry = block.blockData[m].geometry;
                                     name = block.blockData[m].attributes.name;
                                     break;
                                   }
                                 }

                                 if (geometry === null) {
                                   return;
                                 }

                                 for (var j = 0; j < geometry.rings.length; j++) {
                                  //  var latlngs = block.transform(geometry.rings[j]);
                                   var latlngs = geometry.rings[j];
                                   var polygon = L.polygon(latlngs, {
                                     color: "grey",
                                     fillOpacity : config.heatmap.polygon_fillOpacity,
                                     weight : config.od_block.weight,
                                     fillColor : color
                                   }).addTo(block.map);
                                   polygon.bindPopup("街区:"+name+", 车辆数:"+result[i].c);
                                 }
                               }

                               $('.dimmer').css('display','none');
                             }
                         });
        }
      })
    }else {
      $.ajax({
                         type: "get",
                         url: block.dataUrl + "heat/" + time + ".json",
                        //  data: "name=" + $("#Text1").val(),
                         success: function (result) {
                           var arr = config.heatmap.count_arr;
                           for (var i = 0; i < result.length; i++) {
                             var color = block.getColor(result[i].c, arr);
                             var id = result[i].i;
                             var geometry = null;
                             var name = "无";
                             for (var m = 0; m < block.blockData.length; m++) {
                               if (block.blockData[m].attributes.objectid === parseInt(id)) {
                                 geometry = block.blockData[m].geometry;
                                 name = block.blockData[m].attributes.name;
                                 break;
                               }
                             }

                             if (geometry === null) {
                               return;
                             }

                             for (var j = 0; j < geometry.rings.length; j++) {
                              //  var latlngs = block.transform(geometry.rings[j]);
                               var latlngs = geometry.rings[j];
                               var polygon = L.polygon(latlngs, {
                                 color: "grey",
                                 fillOpacity : config.heatmap.polygon_fillOpacity,
                                 weight : config.od_block.weight,
                                 fillColor : color
                               }).addTo(block.map);
                               polygon.bindPopup("街区:"+name+", 车辆数:"+result[i].c);
                             }
                           }
                           $('.dimmer').css('display','none');
                         }
                     });
    }
  }

  block.getOD = function(time, limit){
    // get od data from svc
    $.ajax({
                       type: "get",
                       url: block.dataUrl + "od/" + time + ".json",
                      //  url: "/tmp/od/185p.json",
                      //  data: "name=" + $("#Text1").val(),
                       success: function (result) {
                         block.odData[time] = block.orderByCount(result);
                         block.odMap(time,limit);
                       }
                   });
  }

  //display od layer
  block.odMap = function(time,limit) {
    block.clearMap();
    if (block.odData[time] !== null) {
      $.ajax({
                         type: "get",
                         url: block.dataUrl + "square/" + time +".json",
                         success: function (result) {
                          //  draw rings
                          if (block.blockData === null) {
                            $.ajax({
                              type: "get",
                              url: block.dataUrl + "enCounty.json",
                              success: function(blockdd) {
                                block.blockData = blockdd.features;
                                for (var i = 0; i < result.length; i++) {
                                  var count = result[i].c;
                                  var id = result[i].i;
                                  block.showOdRings(count, id);
                                }
                                // draw od lines
                                block.showOdLines(time, limit);
                              }
                            });
                          }else {
                            for (var i = 0; i < result.length; i++) {
                              var count = result[i].c;
                              var id = result[i].i;
                              block.showOdRings(count, id);
                            }
                            // draw od lines
                            block.showOdLines(time, limit);
                          }

                         }
                     });
    }else {
      block.getOD(time, limit);
    }
  }

  // in O-D graph, show rings layer
  block.maxShowOdRings = function(count, rings){
    var config = block.config;
    var color = count > 0 ? block.getRed(count) : block.getBlue(count);
    for (var j = 0; j < rings.length; j++) {
      var tmp = block.transform(rings[j]);
      var polygon = L.polygon(tmp, {
        color: config.od_block.strokeColor,
        fillOpacity : config.od_block.fillOpacity,
        weight : config.od_block.weight,
        fill : config.od_block.fill,
        fillColor : color
      }).addTo(block.map);

      polygon.bindPopup("color:"+color+", count:"+count);
    }
  }

  block.showOdRings = function(count, id){
    // console.log(count,id);
    var config = block.config;
    var geometry = null;
    var name = "无";
    for (var m = 0; m < block.blockData.length; m++) {
      if (block.blockData[m].attributes.objectid === parseInt(id)) {
        geometry = block.blockData[m].geometry;
        name = block.blockData[m].attributes.name;
        break;
      }
    }

    if (geometry === null) {
      console.log(id);
      return;
    }
    var rings = geometry.rings;
    var color = count > 0 ? block.getRed(count) : block.getBlue(count);
    for (var j = 0; j < rings.length; j++) {
      // var tmp = block.transform(rings[j]);
      var tmp = rings[j];
      var polygon = L.polygon(tmp, {
        color: config.od_block.strokeColor,
        fillOpacity : config.od_block.fillOpacity,
        weight : config.od_block.weight,
        fill : config.od_block.fill,
        fillColor : color
      }).addTo(block.map);
      polygon.bindPopup("街区:"+name+", 净吞吐量:"+count);
    }
  }

  // in O-D graph, show o-d lines
  block.showOdLines = function(time, limit){
    var config = block.config;
    var filterNum = limit;
    var arr = config.od_line.line_color_arr;
    var arrows = [];
    var odData = block.odData[time];
    for (var i = 0; i < odData.length; i++) {
      var width = Math.abs(odData[i].c);
      var latlngs;
      var color = block.getLineColor(width, arr);
      if (width >= filterNum) {
        latlngs = [[odData[i].y, odData[i].x], [odData[i].j, odData[i].i]];
        var polyline = L.polyline(latlngs, {
          weight: width * config.od_line.line_weight_zoom,
          fillOpacity : config.od_line.line_fillOpacity,
          color : color
        }).addTo(block.map);
      }
    }
    $('.dimmer').css('display','none');
    // showOdArrows(arrows);
  }

  // tranform latLng data from 0.xxxxxxx... to 0.xxxxx
  block.transform = function(arr) {
    var config = block.config;
    for (var i = 0; i < arr.length; i++) {
      var tmp = arr[i];
      // console.log(tmp[1],tmp[0]);
      arr[i] = [tmp[1], tmp[0]];
    }
    return arr;
  }

  // axis for count value
  block.getIndex = function(val, arr){
    for (var i = 0; i < arr.length; i++) {
      if (val < arr[i]){
        i++;
        return i;
      }
    }
    return 9;
  }

  // set heatmap color by sqaure
  block.getColor = function(count, arr){
    var index = block.getIndex(count, arr);
    // var colorArr = ["#F7F7D2","#FFEBB5","#FFEF94","#FFDF78","#FFEF61","#FCD200","#F2CA5C","#F5AB00","#E8A600"];
    var colorArr = ["#e2f10a","#e1ec3e","#e5ef63","#eef58f","#f6fbae","#f1f5bf","#e9ecc2","#eff1dd","#f0f1e9"];

    // var colorArr = ["#E8E8E8","#CFCFCF","#B5B5B5","#9C9C9C","#828282","#696969","#4F4F4F","#363636","#1C1C1C"];
    // var colorArr = ["#1C1C1C","#363636","#4F4F4F","#696969","#828282","#9C9C9C","#B5B5B5","#CFCFCF","#E8E8E8"];

    return colorArr[9 - index];
  }

  block.getLineColor = function(count, arr){
    var index = block.getIndex(count, arr);
    var colorArr = ["#F7F7D2","#FFEBB5","#FFEF94","#FFDF78","#FFEF61","#FCD200","#F2CA5C","#F5AB00","#E8A600"];
    return colorArr[9 - index];
  }

  block.orderByCount = function(arr) {
    if (arr.length <= 1) {
      return arr;
    }
    var m = arr[0][2];
    var aArr = [];
    var bArr = [];
    for (var i = 1; i < arr.length; i++) {
      if (arr[i][2] >= m) {
        bArr.push(arr[i]);
        // console.log(bArr);
      } else {
        aArr.push(arr[i]);
        // console.log(aArr);
      }
    }
    var aRes = block.orderByCount(aArr).concat([arr[0]]);
    var bRes = block.orderByCount(bArr);
    return aRes.concat(bRes);
  }

  block.getRed = function(val){
    var config = block.config;
    var len = config.od_block.redArr.length - 1;
    var i = Math.round(len * Math.abs(val) / config.od_block.maxCount);
    if (i >= len) {
      // console.log(val);
      i = len;
    }
    return config.od_block.redArr[len - i];
  }

  block.getBlue = function(val){
    var config = block.config;
    var len = config.od_block.blueArr.length - 1;
    var i = Math.round(len * Math.abs(val) / config.od_block.maxCount);
    if (i >= len) {
      // console.log(val);
      i = len;
    }
    return config.od_block.blueArr[len - i];
  }

  block.showOD2Block = function(time) {
    block.clearMap();
    var config = block.config;
    $.ajax({
                       type: "get",
                       url: block.dataUrl + "square/" + time + ".json",
                       success: function (result) {
                         // draw rings
                         if (block.blockData === null) {
                           $.ajax({
                             type: "get",
                             url: block.dataUrl + "enCounty.json",
                             success: function(blockdd) {
                               block.blockData = blockdd.features;
                               for (var i = 0; i < result.length; i++) {
                                 var count = result[i].c;
                                 var id = result[i].i;
                                 block.showOdRings(count, id);
                               }
                               //$('.dimmer').css('display','none');
                             }
                           });
                         }else {
                           for (var i = 0; i < result.length; i++) {
                             var count = result[i].c;
                             var id = result[i].i;
                              block.showOdRings(count, id);
                           }
                           //$('.dimmer').css('display','none');
                         }
                       }
                     });
  }

  return block;
}
